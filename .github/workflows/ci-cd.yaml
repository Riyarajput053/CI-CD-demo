name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Run only on main branch pushes
  pull_request:
    branches:
      - main  # Run CI checks on PRs

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install Dependencies
      run: |
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        pytest tests/

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci  # Deploy only if CI passes

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      run: |
        sudo apt-get update && sudo apt-get install -y awscli
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Authenticate with AWS ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build and Push Docker Image to ECR
      run: |
        docker build -t ${{ secrets.ECR_REPO }} .
        docker tag ${{ secrets.ECR_REPO }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest

    - name: Deploy to AWS EC2
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
        chmod 400 ec2-key.pem
        ssh -o StrictHostKeyChecking=no -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest
          docker stop $(docker ps -aq) || true
          docker run -d -p 8000:8000 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest
        EOF
